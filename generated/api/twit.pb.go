// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.27.1
// source: api/twit.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTwitReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PublisherFio  string                 `protobuf:"bytes,2,opt,name=publisher_fio,json=publisherFio,proto3" json:"publisher_fio,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Texts         string                 `protobuf:"bytes,4,opt,name=texts,proto3" json:"texts,omitempty"`
	Title         string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTwitReq) Reset() {
	*x = CreateTwitReq{}
	mi := &file_api_twit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTwitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTwitReq) ProtoMessage() {}

func (x *CreateTwitReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTwitReq.ProtoReflect.Descriptor instead.
func (*CreateTwitReq) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTwitReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateTwitReq) GetPublisherFio() string {
	if x != nil {
		return x.PublisherFio
	}
	return ""
}

func (x *CreateTwitReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateTwitReq) GetTexts() string {
	if x != nil {
		return x.Texts
	}
	return ""
}

func (x *CreateTwitReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type TWitId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TWitId) Reset() {
	*x = TWitId{}
	mi := &file_api_twit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TWitId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TWitId) ProtoMessage() {}

func (x *TWitId) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TWitId.ProtoReflect.Descriptor instead.
func (*TWitId) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{1}
}

func (x *TWitId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VideoInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Video         string                 `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	mi := &file_api_twit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{2}
}

func (x *VideoInfo) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

type PhotoInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Photo         string                 `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhotoInfo) Reset() {
	*x = PhotoInfo{}
	mi := &file_api_twit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhotoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoInfo) ProtoMessage() {}

func (x *PhotoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoInfo.ProtoReflect.Descriptor instead.
func (*PhotoInfo) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{3}
}

func (x *PhotoInfo) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

type MusicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mp3           string                 `protobuf:"bytes,1,opt,name=mp3,proto3" json:"mp3,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MusicInfo) Reset() {
	*x = MusicInfo{}
	mi := &file_api_twit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MusicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicInfo) ProtoMessage() {}

func (x *MusicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicInfo.ProtoReflect.Descriptor instead.
func (*MusicInfo) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{4}
}

func (x *MusicInfo) GetMp3() string {
	if x != nil {
		return x.Mp3
	}
	return ""
}

type LocationInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           string                 `protobuf:"bytes,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           string                 `protobuf:"bytes,2,opt,name=lon,proto3" json:"lon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	mi := &file_api_twit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{5}
}

func (x *LocationInfo) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *LocationInfo) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

type UrlInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UrlInfo) Reset() {
	*x = UrlInfo{}
	mi := &file_api_twit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UrlInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlInfo) ProtoMessage() {}

func (x *UrlInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlInfo.ProtoReflect.Descriptor instead.
func (*UrlInfo) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{6}
}

func (x *UrlInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Twit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PublisherFio  string                 `protobuf:"bytes,3,opt,name=publisher_fio,json=publisherFio,proto3" json:"publisher_fio,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Texts         string                 `protobuf:"bytes,5,opt,name=texts,proto3" json:"texts,omitempty"`
	Title         string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ReadersCount  int32                  `protobuf:"varint,7,opt,name=readers_count,json=readersCount,proto3" json:"readers_count,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Videos        []*VideoInfo           `protobuf:"bytes,9,rep,name=videos,proto3" json:"videos,omitempty"`
	Photos        []*PhotoInfo           `protobuf:"bytes,10,rep,name=photos,proto3" json:"photos,omitempty"`
	Musics        []*MusicInfo           `protobuf:"bytes,11,rep,name=musics,proto3" json:"musics,omitempty"`
	Locations     []*LocationInfo        `protobuf:"bytes,12,rep,name=locations,proto3" json:"locations,omitempty"`
	Urls          []*UrlInfo             `protobuf:"bytes,13,rep,name=urls,proto3" json:"urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Twit) Reset() {
	*x = Twit{}
	mi := &file_api_twit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Twit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Twit) ProtoMessage() {}

func (x *Twit) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Twit.ProtoReflect.Descriptor instead.
func (*Twit) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{7}
}

func (x *Twit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Twit) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Twit) GetPublisherFio() string {
	if x != nil {
		return x.PublisherFio
	}
	return ""
}

func (x *Twit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Twit) GetTexts() string {
	if x != nil {
		return x.Texts
	}
	return ""
}

func (x *Twit) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Twit) GetReadersCount() int32 {
	if x != nil {
		return x.ReadersCount
	}
	return 0
}

func (x *Twit) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Twit) GetVideos() []*VideoInfo {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *Twit) GetPhotos() []*PhotoInfo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Twit) GetMusics() []*MusicInfo {
	if x != nil {
		return x.Musics
	}
	return nil
}

func (x *Twit) GetLocations() []*LocationInfo {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *Twit) GetUrls() []*UrlInfo {
	if x != nil {
		return x.Urls
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_api_twit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{8}
}

type TypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeRequest) Reset() {
	*x = TypeRequest{}
	mi := &file_api_twit_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeRequest) ProtoMessage() {}

func (x *TypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeRequest.ProtoReflect.Descriptor instead.
func (*TypeRequest) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{9}
}

func (x *TypeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LimitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LimitRequest) Reset() {
	*x = LimitRequest{}
	mi := &file_api_twit_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitRequest) ProtoMessage() {}

func (x *LimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitRequest.ProtoReflect.Descriptor instead.
func (*LimitRequest) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{10}
}

func (x *LimitRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_api_twit_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{11}
}

func (x *SearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type TwitList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TwitIds       []string               `protobuf:"bytes,1,rep,name=twit_ids,json=twitIds,proto3" json:"twit_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TwitList) Reset() {
	*x = TwitList{}
	mi := &file_api_twit_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitList) ProtoMessage() {}

func (x *TwitList) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitList.ProtoReflect.Descriptor instead.
func (*TwitList) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{12}
}

func (x *TwitList) GetTwitIds() []string {
	if x != nil {
		return x.TwitIds
	}
	return nil
}

type CreateVideoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TwitId        string                 `protobuf:"bytes,1,opt,name=twit_id,json=twitId,proto3" json:"twit_id,omitempty"`
	File          []byte                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVideoReq) Reset() {
	*x = CreateVideoReq{}
	mi := &file_api_twit_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoReq) ProtoMessage() {}

func (x *CreateVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoReq.ProtoReflect.Descriptor instead.
func (*CreateVideoReq) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{13}
}

func (x *CreateVideoReq) GetTwitId() string {
	if x != nil {
		return x.TwitId
	}
	return ""
}

func (x *CreateVideoReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *CreateVideoReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type VideoId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoId) Reset() {
	*x = VideoId{}
	mi := &file_api_twit_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoId) ProtoMessage() {}

func (x *VideoId) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoId.ProtoReflect.Descriptor instead.
func (*VideoId) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{14}
}

func (x *VideoId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoId) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreatePhotoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TwitId        string                 `protobuf:"bytes,1,opt,name=twit_id,json=twitId,proto3" json:"twit_id,omitempty"`
	File          []byte                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePhotoReq) Reset() {
	*x = CreatePhotoReq{}
	mi := &file_api_twit_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoReq) ProtoMessage() {}

func (x *CreatePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoReq.ProtoReflect.Descriptor instead.
func (*CreatePhotoReq) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{15}
}

func (x *CreatePhotoReq) GetTwitId() string {
	if x != nil {
		return x.TwitId
	}
	return ""
}

func (x *CreatePhotoReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *CreatePhotoReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type PhotoId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhotoId) Reset() {
	*x = PhotoId{}
	mi := &file_api_twit_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhotoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoId) ProtoMessage() {}

func (x *PhotoId) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoId.ProtoReflect.Descriptor instead.
func (*PhotoId) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{16}
}

func (x *PhotoId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PhotoId) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateMusicReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TwitId        string                 `protobuf:"bytes,1,opt,name=twit_id,json=twitId,proto3" json:"twit_id,omitempty"`
	File          []byte                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMusicReq) Reset() {
	*x = CreateMusicReq{}
	mi := &file_api_twit_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMusicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMusicReq) ProtoMessage() {}

func (x *CreateMusicReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMusicReq.ProtoReflect.Descriptor instead.
func (*CreateMusicReq) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{17}
}

func (x *CreateMusicReq) GetTwitId() string {
	if x != nil {
		return x.TwitId
	}
	return ""
}

func (x *CreateMusicReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *CreateMusicReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type MusicId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MusicId) Reset() {
	*x = MusicId{}
	mi := &file_api_twit_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MusicId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicId) ProtoMessage() {}

func (x *MusicId) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicId.ProtoReflect.Descriptor instead.
func (*MusicId) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{18}
}

func (x *MusicId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MusicId) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateLocationReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TwitId        string                 `protobuf:"bytes,1,opt,name=twit_id,json=twitId,proto3" json:"twit_id,omitempty"`
	Lat           string                 `protobuf:"bytes,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           string                 `protobuf:"bytes,3,opt,name=lon,proto3" json:"lon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLocationReq) Reset() {
	*x = CreateLocationReq{}
	mi := &file_api_twit_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLocationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationReq) ProtoMessage() {}

func (x *CreateLocationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationReq.ProtoReflect.Descriptor instead.
func (*CreateLocationReq) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{19}
}

func (x *CreateLocationReq) GetTwitId() string {
	if x != nil {
		return x.TwitId
	}
	return ""
}

func (x *CreateLocationReq) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *CreateLocationReq) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

type LocationId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationId) Reset() {
	*x = LocationId{}
	mi := &file_api_twit_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationId) ProtoMessage() {}

func (x *LocationId) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationId.ProtoReflect.Descriptor instead.
func (*LocationId) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{20}
}

func (x *LocationId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateUrlReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TwitId        string                 `protobuf:"bytes,1,opt,name=twit_id,json=twitId,proto3" json:"twit_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUrlReq) Reset() {
	*x = CreateUrlReq{}
	mi := &file_api_twit_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUrlReq) ProtoMessage() {}

func (x *CreateUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUrlReq.ProtoReflect.Descriptor instead.
func (*CreateUrlReq) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{21}
}

func (x *CreateUrlReq) GetTwitId() string {
	if x != nil {
		return x.TwitId
	}
	return ""
}

func (x *CreateUrlReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UrlId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UrlId) Reset() {
	*x = UrlId{}
	mi := &file_api_twit_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UrlId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlId) ProtoMessage() {}

func (x *UrlId) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlId.ProtoReflect.Descriptor instead.
func (*UrlId) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{22}
}

func (x *UrlId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FileUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_api_twit_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_twit_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_api_twit_proto_rawDescGZIP(), []int{23}
}

func (x *FileUploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_api_twit_proto protoreflect.FileDescriptor

var file_api_twit_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x46, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x18, 0x0a, 0x06, 0x54, 0x57, 0x69, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a,
	0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x22, 0x21, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x09, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x70, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x70, 0x33, 0x22, 0x32, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x22, 0x1b, 0x0a, 0x07, 0x55, 0x72, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0xa3, 0x03, 0x0a, 0x04, 0x54, 0x77, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x5f, 0x66, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x46, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26,
	0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x26,
	0x0a, 0x06, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x72, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x21, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x29, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x25, 0x0a, 0x08, 0x54, 0x77, 0x69, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x69, 0x74, 0x49, 0x64, 0x73, 0x22, 0x5a, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x77, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x07, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5a, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x77, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x5a, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x77, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x07, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x77, 0x69, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x0a, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x77, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x17, 0x0a, 0x05, 0x55, 0x72, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x12,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x32, 0x8e, 0x0c, 0x0a, 0x0b, 0x54, 0x77, 0x69, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x69, 0x74, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x77, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x57, 0x69,
	0x74, 0x49, 0x64, 0x22, 0x3b, 0x92, 0x41, 0x25, 0x1a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x74, 0x77, 0x69, 0x74, 0x62, 0x10, 0x0a, 0x0e, 0x0a,
	0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74,
	0x12, 0x50, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x77, 0x69, 0x74, 0x12, 0x0b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x57, 0x69, 0x74, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x77, 0x69, 0x74, 0x22, 0x2d, 0x92, 0x41, 0x15, 0x1a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x75, 0x73, 0x65, 0x72, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x74,
	0x73, 0x12, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x11, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x73, 0x12,
	0x50, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x69, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x77, 0x69, 0x74, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65,
	0x7d, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x64, 0x54, 0x77, 0x69, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x77, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x73,
	0x74, 0x2d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x77, 0x69, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x18, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x73, 0x2f,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x77, 0x69, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x77, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x68, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x69, 0x74,
	0x12, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x57, 0x69, 0x74, 0x49, 0x64, 0x1a, 0x0a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x41, 0x92, 0x41, 0x21, 0x1a, 0x0d,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x74, 0x77, 0x69, 0x74, 0x62, 0x10, 0x0a,
	0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x73,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x40, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x54, 0x77, 0x69, 0x74, 0x12, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x57, 0x69, 0x74, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22,
	0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb4,
	0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x22, 0x81, 0x01, 0x92, 0x41, 0x3c, 0x1a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20,
	0x61, 0x20, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x32, 0x13, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x3a, 0x01, 0x2a, 0x5a, 0x27, 0x3a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x7b,
	0x74, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0xb4, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x81, 0x01, 0x92, 0x41, 0x3c, 0x1a, 0x13,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x61, 0x20, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x66,
	0x69, 0x6c, 0x65, 0x32, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x2f, 0x66,
	0x6f, 0x72, 0x6d, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c,
	0x3a, 0x01, 0x2a, 0x5a, 0x27, 0x3a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x1f, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x7b, 0x74, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x0e, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0xb4, 0x01, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x22,
	0x81, 0x01, 0x92, 0x41, 0x3c, 0x1a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x61, 0x20,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x32, 0x13, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x3a, 0x01, 0x2a, 0x5a, 0x27, 0x3a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x7b, 0x74, 0x77,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x2f, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x12, 0x83, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x48, 0x92, 0x41, 0x29, 0x1a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6e,
	0x65, 0x77, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x10, 0x0a, 0x0e, 0x0a,
	0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69, 0x74,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x72, 0x6c, 0x49, 0x64, 0x22, 0x3e, 0x92, 0x41, 0x24, 0x1a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x75, 0x72, 0x6c, 0x62, 0x10, 0x0a, 0x0e,
	0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x77, 0x69,
	0x74, 0x2f, 0x75, 0x72, 0x6c, 0x42, 0x16, 0x5a, 0x14, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x79, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_twit_proto_rawDescOnce sync.Once
	file_api_twit_proto_rawDescData = file_api_twit_proto_rawDesc
)

func file_api_twit_proto_rawDescGZIP() []byte {
	file_api_twit_proto_rawDescOnce.Do(func() {
		file_api_twit_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_twit_proto_rawDescData)
	})
	return file_api_twit_proto_rawDescData
}

var file_api_twit_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_twit_proto_goTypes = []any{
	(*CreateTwitReq)(nil),      // 0: api.CreateTwitReq
	(*TWitId)(nil),             // 1: api.TWitId
	(*VideoInfo)(nil),          // 2: api.VideoInfo
	(*PhotoInfo)(nil),          // 3: api.PhotoInfo
	(*MusicInfo)(nil),          // 4: api.MusicInfo
	(*LocationInfo)(nil),       // 5: api.LocationInfo
	(*UrlInfo)(nil),            // 6: api.UrlInfo
	(*Twit)(nil),               // 7: api.Twit
	(*Empty)(nil),              // 8: api.Empty
	(*TypeRequest)(nil),        // 9: api.TypeRequest
	(*LimitRequest)(nil),       // 10: api.LimitRequest
	(*SearchRequest)(nil),      // 11: api.SearchRequest
	(*TwitList)(nil),           // 12: api.TwitList
	(*CreateVideoReq)(nil),     // 13: api.CreateVideoReq
	(*VideoId)(nil),            // 14: api.VideoId
	(*CreatePhotoReq)(nil),     // 15: api.CreatePhotoReq
	(*PhotoId)(nil),            // 16: api.PhotoId
	(*CreateMusicReq)(nil),     // 17: api.CreateMusicReq
	(*MusicId)(nil),            // 18: api.MusicId
	(*CreateLocationReq)(nil),  // 19: api.CreateLocationReq
	(*LocationId)(nil),         // 20: api.LocationId
	(*CreateUrlReq)(nil),       // 21: api.CreateUrlReq
	(*UrlId)(nil),              // 22: api.UrlId
	(*FileUploadResponse)(nil), // 23: api.FileUploadResponse
}
var file_api_twit_proto_depIdxs = []int32{
	2,  // 0: api.Twit.videos:type_name -> api.VideoInfo
	3,  // 1: api.Twit.photos:type_name -> api.PhotoInfo
	4,  // 2: api.Twit.musics:type_name -> api.MusicInfo
	5,  // 3: api.Twit.locations:type_name -> api.LocationInfo
	6,  // 4: api.Twit.urls:type_name -> api.UrlInfo
	0,  // 5: api.TwitService.CreateTwit:input_type -> api.CreateTwitReq
	1,  // 6: api.TwitService.GetTwit:input_type -> api.TWitId
	8,  // 7: api.TwitService.GetAllTwits:input_type -> api.Empty
	9,  // 8: api.TwitService.GetTwitsByType:input_type -> api.TypeRequest
	10, // 9: api.TwitService.GetMostViewedTwits:input_type -> api.LimitRequest
	10, // 10: api.TwitService.GetLatestTwits:input_type -> api.LimitRequest
	11, // 11: api.TwitService.SearchTwits:input_type -> api.SearchRequest
	1,  // 12: api.TwitService.DeleteTwit:input_type -> api.TWitId
	1,  // 13: api.TwitService.AddCountToTwit:input_type -> api.TWitId
	13, // 14: api.TwitService.CreateVideo:input_type -> api.CreateVideoReq
	15, // 15: api.TwitService.CreatePhoto:input_type -> api.CreatePhotoReq
	17, // 16: api.TwitService.CreateMusic:input_type -> api.CreateMusicReq
	19, // 17: api.TwitService.CreateLocation:input_type -> api.CreateLocationReq
	21, // 18: api.TwitService.CreateUrl:input_type -> api.CreateUrlReq
	1,  // 19: api.TwitService.CreateTwit:output_type -> api.TWitId
	7,  // 20: api.TwitService.GetTwit:output_type -> api.Twit
	12, // 21: api.TwitService.GetAllTwits:output_type -> api.TwitList
	12, // 22: api.TwitService.GetTwitsByType:output_type -> api.TwitList
	12, // 23: api.TwitService.GetMostViewedTwits:output_type -> api.TwitList
	12, // 24: api.TwitService.GetLatestTwits:output_type -> api.TwitList
	12, // 25: api.TwitService.SearchTwits:output_type -> api.TwitList
	8,  // 26: api.TwitService.DeleteTwit:output_type -> api.Empty
	8,  // 27: api.TwitService.AddCountToTwit:output_type -> api.Empty
	14, // 28: api.TwitService.CreateVideo:output_type -> api.VideoId
	16, // 29: api.TwitService.CreatePhoto:output_type -> api.PhotoId
	18, // 30: api.TwitService.CreateMusic:output_type -> api.MusicId
	20, // 31: api.TwitService.CreateLocation:output_type -> api.LocationId
	22, // 32: api.TwitService.CreateUrl:output_type -> api.UrlId
	19, // [19:33] is the sub-list for method output_type
	5,  // [5:19] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_twit_proto_init() }
func file_api_twit_proto_init() {
	if File_api_twit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_twit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_twit_proto_goTypes,
		DependencyIndexes: file_api_twit_proto_depIdxs,
		MessageInfos:      file_api_twit_proto_msgTypes,
	}.Build()
	File_api_twit_proto = out.File
	file_api_twit_proto_rawDesc = nil
	file_api_twit_proto_goTypes = nil
	file_api_twit_proto_depIdxs = nil
}
